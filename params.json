{"name":"Hashload","tagline":"hashLoad是一个用于移动端页面异步加载的zepto插件","body":"hashLoad\r\n=\r\n\r\n## 介绍\r\nhashLoad是一个用于移动端页面异步加载的zepto插件。\r\n通过使用location.hash实现页面内部的切换、页面的回退和前进操作。\r\n\r\n## 引入\r\n```\r\n<!-- hashLoad 样式 -->\r\n<link href=\"./src/css/hash_load.css\" rel=\"stylesheet\">\r\n<!-- zepto 1.1.6 && touch,没有touch时将监听click事件 -->\r\n<script type=\"text/javascript\" src=\"./src/js/zepto.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"./src/js/touch.min.js\"></script>\r\n<!-- hashLoad 插件程序 -->\r\n<script type=\"text/javascript\" src=\"./src/js/hash_load.js\"></script>\r\n```\r\n\r\n## 执行\r\n```\r\nvar page=new hashLoad({\r\n    target:'#page'\r\n});\r\npage.init();\r\n```\r\n\r\n## 配置\r\n```\r\nload:'switch',//默认加载类型\r\ntab:'switch',//默认tab切换类型\r\ntarget:null,//默认加载页面的dom对象\r\ncache:false//页面缓存\r\n```\r\n\r\n## 页面切换\r\n页面切换可以采用两种方式（load或tab），load将ajax异步加载页面，tab将载入页面中的已有页面\r\n\r\n### load载入\r\n```\r\n<!-- 目标文件声明内容 -->\r\n<div class=\"hash-page\" data-role=\"page\">\r\n\t<!-- 写入html、js、css内容 -->\r\n</div>\r\n```\r\n```\r\n<!-- 使用href地址跳转 -->\r\n<a href=\"./page/page_tab.html?page=1\">跳转至page_tab.html</a>\r\n<a href=\"./page/page_tab.html?page=1#page1\">跳转至page_tab.html并默认展开ID为page1的tab</a>\r\n<!-- 关闭ajax加载 -->\r\n<a href=\"http://www.google.com\" data-ajax=\"false\">跳转至google</a>\r\n<!-- 默认不会被执行的链接 -->\r\n<a href=\"javascript:alert(1);\">javascript方法</a>\r\n<a href=\"#\">无意义占位符</a>\r\n<a href=\"\">空链接</a>\r\n```\r\n通过在a标签添加`data-hash-load`属性定义load的加载方法名（默认为配置项）。添加`data-hash-cache`(true/false，默认为false)开启缓存。\r\n\r\n### tab切换\r\n```\r\n<!-- 声明tab集合 -->\r\n<div data-role=\"tab-group\">\r\n    <div id=\"page1\" class=\"hash-tab\" data-role=\"tab\">\r\n        <p>页面1</p>\r\n    </div>\r\n    <div id=\"page2\" class=\"hash-tab\" data-role=\"tab\">\r\n        <p>页面2</p>\r\n        <p>数据内容</p>\r\n        <p>数据内容</p>\r\n        <p>数据内容</p>\r\n    </div>\r\n    <div id=\"page3\" class=\"hash-tab\" data-role=\"tab\">\r\n        页面3\r\n    </div>\r\n</div>\r\n<!-- 使用href 跳转 -->\r\n<a href=\"#page1\">展开ID为page1的tab</a>\r\n```\r\n通过在a标签添加`data-hash-tab`属性定义tab的切换方法名。\r\n\r\n\r\n## 页面切换扩展\r\n页面的切换方式可以通过`updateFunc(类型,扩展对象)`方法更新或扩展。\r\n\r\n### load扩展\r\n```\r\n/**\r\n * @param  {string}   url      加载地址\r\n * @param  {object}   target   加载目标\r\n * @param  {string}   action   forward/back，该动作是前进还是后退\r\n * @param  {Function} callback 回调函数列表，执行对应的回调操作\r\n */\r\npage.updateFunc('load',{\r\n\t'page':function(url,target,action,callback){\r\n\t\t$('#hash-loading').show();\r\n\t\tvar self=this;\r\n\t\t$.get(url,function(data){\r\n\t\t\t//数据加载完成\r\n\t\t\tcallback['hashPageLoaded'].call();\r\n\t\t\tif($(target).find('.hash-page')===0) $(target).html('<div class=\"hash-page\" data-role=\"page\"></div>');\r\n\t\t\t$(target).find('.hash-page').html(data);\r\n\t\t\t//数据渲染完成\r\n\t\t\tcallback['hashPageCreated'].call();\r\n\t\t\t$('#hashload-loading').hide();\r\n\t\t\t//数据展示完成\r\n\t\t\tcallback['hashPageShow'].call();\r\n\t\t});\r\n\t}\r\n});\r\n```\r\n注：如果是动画效果，需要采用定时器时，可以调用this._timer._load_timer方法赋值，当定时器完成后，应重置为null，可参考_load_func->switch方法\r\n\r\n### tab扩展\r\n```\r\n/**\r\n * @param  {string}   target   目标ID\r\n * @param  {Function} callback 回调函数\r\n */\r\npage.updateFunc('tab',{\r\n\t'display':function(target,callback){\r\n\t\t//tab展示前\r\n\t\tcallback['hashTabBeforeShow'].call();\r\n\t\t$(target).siblings('[data-role=\"page\"]').removeClass('cur');\r\n\t\t$(target).addClass('cur');\r\n\t\t//tab展示完成\r\n\t\tcallback['hashTabShow'].call();\r\n\t}\r\n});\r\n```\r\n注：如果是动画效果，需要采用定时器时，可以调用this._timer._tab_timer方法赋值，当定时器完成后，应重置为null，可参考_tab_func->switch方法\r\n\r\n## js执行页面跳转\r\n```\r\n/**\r\n * @param  {string} url       链接地址\r\n * @param  {string} load_type load执行函数\r\n * @param  {string} tab_type  tab执行函数\r\n * @param  {boolen} cache     是否启用缓存\r\n */\r\npage.location('index.html');\r\n```\r\n\r\n## 监听回调事件\r\n可以通过$(目标DOM).on('事件名',function(){})监听事件\r\n### load事件监听\r\n`pageBeforeLoaded` load前\r\n`hashPageLoaded` load完成后\r\n`hashPageCreated` 页面创建后\r\n`hashPageShow` 页面展示后\r\n\r\n```\r\n$('#page').on('hashPageLoaded',function(){\r\n    console.log('执行load函数');\r\n});\r\n```\r\n\r\n### tab事件监听\r\n`hashTabBeforeShow` tab显示前\r\n`hashTabShow` tab显示后\r\n\r\n```\r\n$('#page1').on('hashTabShow',function(){\r\n    console.log('tab显示后');\r\n});\r\n```\r\n\r\n### window事件监听\r\n`hashChangeInfo` hash变更\r\n```\r\n$(window).on('hashChangeInfo',function(data){\r\n    console.log(data._args);\r\n});\r\n```\r\n## javascript引入\r\n\r\n### 文件加载\r\n在页面中定义的javascript会同步执行，在js文件中定义的javascript(注意js文件位置应相对于load页面位置);\r\n```\r\n<!-- 页面中引入js文件 -->\r\n<script type=\"text/javascript\" src=\"./page/page_test.js\"></script>\r\n```\r\n注意：使用jQuery载入将正常加载，zepto中引入时，将在页面加载完成后加载js文件（不管js文件声明的位置在哪里），区别见下：\r\n```\r\n<script type=\"text/javascript\" src=\"test.js\"></script>\r\n<!-- test.js内容\r\n\tconsole.log(1);\r\n -->\r\n<script type=\"text/javascript\">\r\nconsole.log(2);\r\n</script>\r\n```\r\n在jQuery中为：\r\n```\r\n1\r\n2\r\n```\r\n在zepto中为：\r\n```\r\n2\r\n1\r\n```\r\n\r\n### 作用域\r\n为防止全局变量污染，请使用以下代码声明页面内部的js代码\r\n```\r\npage.runScript(function(){\r\n\t//在这里写入js代码\r\n});\r\n```\r\n\r\n当当前页面卸载时，可以使用以下代码执行卸载前操作\r\n```\r\npage.unScript(function(){\r\n\t//在这里写入js代码\r\n});\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}